$durations = qn;  hn   <--- this is separation of concerns and can be directly applied on transform and combine alone
$positions = 1 -  3|5
###$notes = qn 1 - hn (3|5|7)  <--- this not right now, maybe later
$snippet1 = toNotes($durations,$positions)
$t = 3,5-> 4,6
$snippet2 = transform($snippet1,$t)
$t2 = 3,5-> 5,7
$snippet3 = transform($snippet1,t2)
$combined_snippets = snippet1 - snippet2 - snippet3 - snippet2
$con = {key=c,octave=5}
$music1 = toMusic(combined_snippets,$con)
$t3 = n->n+3
$combined_snippets2 = transform($combined_snippets,$t3)
$music1 = toMusic(combined_snippets2,$con)


$timed_notes = toNotes($positions, $durations)
$m1 = toMusic($timed_notes,$con)
$transformation = (, -> ;) . (1;3->3;1)
$m5 = transform($timed_notes,$transformation)
$patterns = [->3 | ->4 | 3->3,5,7 ]
$notes = combine($patterns,5)
$notes = combine($patterns,5,$timed_notes)


$x_notes_2 = extend $n with 5 of $patterns

$chrd1= qn (1,3,5)
$chrd2= qn (1;2;3)
$con = {octave_pos=5;key=c}
$m1 = play ($chrd1 ; $chrd2) in $con
$m2 = play (qn $chrd1 ; hn $chrd2 ; qn $chrd3) in $con
$m3 = $m1 ; $m2
$m4 = play (qn (1;2;1;2;2;1;1;1)) in $con
$m5 = transform $m4 with ((, -> ;) . (1;3->3;1))
$patterns = [->3 | qn x -> hn x ]
$notes = combine 5 of [->3 | ->4 | 3->3,5,7 ]
$x_notes = extend (qn (1;3;5)) with 5 of [ ->qn 3 | ->qn 4 | qn 3->qn (3,5,7) ]
$x_notes_2 = extend $n with 5 of $patterns
play $x_notes in $con


#tasks
#support toNotes semantics in all stages.
#play in
#replace space as serial composition with ;
#transform
#combine
#extend
